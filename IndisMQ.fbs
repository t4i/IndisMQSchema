//flatc -g -c --js --ts IndisMQ.fbs --gen-object-api --scoped-enums --gen-mutable
//Version Major 00 Minor 01
namespace IndisMQ;
file_identifier "0001";
/* these are the types of messages that can be sent
SINGLE: like an RPC has a single intended recepient aka peer
CAST: intended for all active subscribers
QUEUE: intended for one of active subscribers
CMD: Internal Command send to peer
*/
enum MsgType:byte{REQ,REP,CAST}
/* these give additional (optional) information for the receiver similar to http verbs
Actual meaning is program specific, this is only intent
GET: retrieve a value
SET: Set a value, if exists replace
NEW: Set if not exists, error if exists
APPEND: Set a value, if exists update
REPLACE: Replace a value entirely
UPDATE: Update value with included properties
DELETE: Delete a value
*/
enum Action:byte{GET,SET,NEW,APPEND,REPLACE,UPDATE,DELETE,SUBSCRIBE,UNSUBSCRIBE,CONNECT,JOIN}
/*these are internal command codes
SUB: request to subscribe to a path, will be processed automatically and return if a callback is present
UNSUB: request to be unsubscribed to a path, processed automaticlaly and return success if a callback is present
SYN: request Syncronization, receiver replies with an ACK that contains client info
READY: Ready to recieve
PATHS (future): Returns list of paths receiver has handlers and subscribers for
*/
table Imq{
    MsgId:string;
    MsgType:MsgType;
    Action:Action;
    To:string;
    From:string;
    Path:string;
    Authorization:string;
    Body:[ubyte];
    Meta:[Meta];
}

table Meta{
    Key:string(key);
    Value:string;
}

root_type Imq;
