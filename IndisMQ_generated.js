// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var IndisMQ = IndisMQ || {};

/**
 * @enum
 */
IndisMQ.MsgType = {
  NONE: 0,
  SINGLE: 1,
  CAST: 2,
  QUEUE: 3,
  CMD: 4
};

/**
 * @enum
 */
IndisMQ.Action = {
  NONE: 0,
  GET: 1,
  SET: 2,
  NEW: 3,
  APPEND: 4,
  REPLACE: 5,
  UPDATE: 6,
  DELETE: 7
};

/**
 * @enum
 */
IndisMQ.Cmd = {
  NONE: 0,
  SUB: 1,
  UNSUB: 2,
  SYN: 3,
  READY: 4
};

/**
 * @enum
 */
IndisMQ.Sts = {
  NONE: 0,
  ERROR: 1,
  REQ: 2,
  REP: 3,
  SEQ: 4,
  CANCEL: 5,
  SUCCESS: 6,
  ACK: 7
};

/**
 * @enum
 */
IndisMQ.Err = {
  NONE: 0,
  NO_HANDLER: 1,
  INVALID: 2,
  REMOTE: 3,
  TIMEOUT: 4
};

/**
 * @constructor
 */
IndisMQ.Ver = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {IndisMQ.Ver}
 */
IndisMQ.Ver.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
IndisMQ.Ver.prototype.Major = function() {
  return this.bb.readInt8(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
IndisMQ.Ver.prototype.mutate_Major = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {number}
 */
IndisMQ.Ver.prototype.Minor = function() {
  return this.bb.readInt8(this.bb_pos + 1);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
IndisMQ.Ver.prototype.mutate_Minor = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 1)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Major
 * @param {number} Minor
 * @returns {flatbuffers.Offset}
 */
IndisMQ.Ver.createVer = function(builder, Major, Minor) {
  builder.prep(1, 2);
  builder.writeInt8(Minor);
  builder.writeInt8(Major);
  return builder.offset();
};

/**
 * @constructor
 */
IndisMQ.Imq = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {IndisMQ.Imq}
 */
IndisMQ.Imq.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {IndisMQ.Imq=} obj
 * @returns {IndisMQ.Imq}
 */
IndisMQ.Imq.getRootAsImq = function(bb, obj) {
  return (obj || new IndisMQ.Imq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
IndisMQ.Imq.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('0001');
};

/**
 * @param {number} index
 * @returns {number}
 */
IndisMQ.Imq.prototype.Body = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
IndisMQ.Imq.prototype.BodyLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
IndisMQ.Imq.prototype.BodyArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
IndisMQ.Imq.prototype.From = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
IndisMQ.Imq.prototype.To = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
IndisMQ.Imq.prototype.Broker = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
IndisMQ.Imq.prototype.mutate_Broker = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, +value);
  return true;
}

/**
 * @returns {IndisMQ.Cmd}
 */
IndisMQ.Imq.prototype.Cmd = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {IndisMQ.Cmd} */ (this.bb.readInt8(this.bb_pos + offset)) : IndisMQ.Cmd.NONE;
};

/**
 * @param {IndisMQ.Cmd} value
 * @returns {boolean}
 */
IndisMQ.Imq.prototype.mutate_Cmd = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
IndisMQ.Imq.prototype.MsgId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {IndisMQ.MsgType}
 */
IndisMQ.Imq.prototype.MsgType = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? /** @type {IndisMQ.MsgType} */ (this.bb.readInt8(this.bb_pos + offset)) : IndisMQ.MsgType.NONE;
};

/**
 * @param {IndisMQ.MsgType} value
 * @returns {boolean}
 */
IndisMQ.Imq.prototype.mutate_MsgType = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {IndisMQ.Sts}
 */
IndisMQ.Imq.prototype.Sts = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? /** @type {IndisMQ.Sts} */ (this.bb.readInt8(this.bb_pos + offset)) : IndisMQ.Sts.NONE;
};

/**
 * @param {IndisMQ.Sts} value
 * @returns {boolean}
 */
IndisMQ.Imq.prototype.mutate_Sts = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 18)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
IndisMQ.Imq.prototype.Path = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {IndisMQ.Err}
 */
IndisMQ.Imq.prototype.Err = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? /** @type {IndisMQ.Err} */ (this.bb.readInt8(this.bb_pos + offset)) : IndisMQ.Err.NONE;
};

/**
 * @param {IndisMQ.Err} value
 * @returns {boolean}
 */
IndisMQ.Imq.prototype.mutate_Err = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 22)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
IndisMQ.Imq.prototype.StsMsg = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
IndisMQ.Imq.prototype.Callback = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
IndisMQ.Imq.prototype.mutate_Callback = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 26)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, +value);
  return true;
}

/**
 * @param {IndisMQ.Ver=} obj
 * @returns {IndisMQ.Ver}
 */
IndisMQ.Imq.prototype.Ver = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? (obj || new IndisMQ.Ver).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
IndisMQ.Imq.startImq = function(builder) {
  builder.startObject(13);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} BodyOffset
 */
IndisMQ.Imq.addBody = function(builder, BodyOffset) {
  builder.addFieldOffset(0, BodyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
IndisMQ.Imq.createBodyVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
IndisMQ.Imq.startBodyVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} FromOffset
 */
IndisMQ.Imq.addFrom = function(builder, FromOffset) {
  builder.addFieldOffset(1, FromOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ToOffset
 */
IndisMQ.Imq.addTo = function(builder, ToOffset) {
  builder.addFieldOffset(2, ToOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} Broker
 */
IndisMQ.Imq.addBroker = function(builder, Broker) {
  builder.addFieldInt8(3, +Broker, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {IndisMQ.Cmd} Cmd
 */
IndisMQ.Imq.addCmd = function(builder, Cmd) {
  builder.addFieldInt8(4, Cmd, IndisMQ.Cmd.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MsgIdOffset
 */
IndisMQ.Imq.addMsgId = function(builder, MsgIdOffset) {
  builder.addFieldOffset(5, MsgIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {IndisMQ.MsgType} MsgType
 */
IndisMQ.Imq.addMsgType = function(builder, MsgType) {
  builder.addFieldInt8(6, MsgType, IndisMQ.MsgType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {IndisMQ.Sts} Sts
 */
IndisMQ.Imq.addSts = function(builder, Sts) {
  builder.addFieldInt8(7, Sts, IndisMQ.Sts.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PathOffset
 */
IndisMQ.Imq.addPath = function(builder, PathOffset) {
  builder.addFieldOffset(8, PathOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {IndisMQ.Err} Err
 */
IndisMQ.Imq.addErr = function(builder, Err) {
  builder.addFieldInt8(9, Err, IndisMQ.Err.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} StsMsgOffset
 */
IndisMQ.Imq.addStsMsg = function(builder, StsMsgOffset) {
  builder.addFieldOffset(10, StsMsgOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} Callback
 */
IndisMQ.Imq.addCallback = function(builder, Callback) {
  builder.addFieldInt8(11, +Callback, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} VerOffset
 */
IndisMQ.Imq.addVer = function(builder, VerOffset) {
  builder.addFieldStruct(12, VerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
IndisMQ.Imq.endImq = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
IndisMQ.Imq.finishImqBuffer = function(builder, offset) {
  builder.finish(offset, '0001');
};

// Exports for Node.js and RequireJS
this.IndisMQ = IndisMQ;
