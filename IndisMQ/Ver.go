// automatically generated by the FlatBuffers compiler, do not modify

package IndisMQ

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Ver struct {
	_tab flatbuffers.Struct
}

func (rcv *Ver) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Ver) Major() int8 {
	return rcv._tab.GetInt8(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Ver) MutateMajor(n int8) bool {
	return rcv._tab.MutateInt8(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Ver) Minor() int8 {
	return rcv._tab.GetInt8(rcv._tab.Pos + flatbuffers.UOffsetT(1))
}
func (rcv *Ver) MutateMinor(n int8) bool {
	return rcv._tab.MutateInt8(rcv._tab.Pos+flatbuffers.UOffsetT(1), n)
}

func CreateVer(builder *flatbuffers.Builder, Major int8, Minor int8) flatbuffers.UOffsetT {
	builder.Prep(1, 2)
	builder.PrependInt8(Minor)
	builder.PrependInt8(Major)
	return builder.Offset()
}
